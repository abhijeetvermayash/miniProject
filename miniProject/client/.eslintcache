[{"C:\\Users\\ANKUR\\Desktop\\MiniProject\\miniProject\\client\\src\\index.js":"1","C:\\Users\\ANKUR\\Desktop\\MiniProject\\miniProject\\client\\src\\products\\singleprod.js":"2","C:\\Users\\ANKUR\\Desktop\\MiniProject\\miniProject\\client\\src\\header.js":"3","C:\\Users\\ANKUR\\Desktop\\MiniProject\\miniProject\\client\\src\\Home\\home.js":"4","C:\\Users\\ANKUR\\Desktop\\MiniProject\\miniProject\\client\\src\\context\\auth.js":"5","C:\\Users\\ANKUR\\Desktop\\MiniProject\\miniProject\\client\\src\\ResLog\\SignUpForm.jsx":"6","C:\\Users\\ANKUR\\Desktop\\MiniProject\\miniProject\\client\\src\\util\\setHeader.js":"7","C:\\Users\\ANKUR\\Desktop\\MiniProject\\miniProject\\client\\src\\ResLog\\LoginForm.jsx":"8","C:\\Users\\ANKUR\\Desktop\\MiniProject\\miniProject\\client\\src\\products\\prodgrid.js":"9","C:\\Users\\ANKUR\\Desktop\\MiniProject\\miniProject\\client\\src\\App.js":"10"},{"size":533,"mtime":1606636429541,"results":"11","hashOfConfig":"12"},{"size":827,"mtime":1606655758717,"results":"13","hashOfConfig":"12"},{"size":4078,"mtime":1606659422394,"results":"14","hashOfConfig":"12"},{"size":8555,"mtime":1606650355392,"results":"15","hashOfConfig":"12"},{"size":3623,"mtime":1606650451729,"results":"16","hashOfConfig":"12"},{"size":11151,"mtime":1606648226158,"results":"17","hashOfConfig":"12"},{"size":247,"mtime":1606634725692,"results":"18","hashOfConfig":"12"},{"size":4479,"mtime":1606654755264,"results":"19","hashOfConfig":"12"},{"size":738,"mtime":1606655365836,"results":"20","hashOfConfig":"12"},{"size":958,"mtime":1606659443822,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1stlhj3",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ANKUR\\Desktop\\MiniProject\\miniProject\\client\\src\\index.js",[],["44","45"],"C:\\Users\\ANKUR\\Desktop\\MiniProject\\miniProject\\client\\src\\products\\singleprod.js",[],"C:\\Users\\ANKUR\\Desktop\\MiniProject\\miniProject\\client\\src\\header.js",["46"],"C:\\Users\\ANKUR\\Desktop\\MiniProject\\miniProject\\client\\src\\Home\\home.js",["47","48","49","50","51","52","53"],"C:\\Users\\ANKUR\\Desktop\\MiniProject\\miniProject\\client\\src\\context\\auth.js",[],"C:\\Users\\ANKUR\\Desktop\\MiniProject\\miniProject\\client\\src\\ResLog\\SignUpForm.jsx",["54"],"import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { useFormik } from \"formik\";\r\nimport \"../assets/css/bootstrap.css\";\r\nimport \"../assets/css/font-awesome.css\";\r\nimport \"../assets/css/style.css\";\r\nimport { SpinnerCircular } from \"spinners-react\";\r\n\r\nexport default function SignUpForm() {\r\n  const { state, SignUp } = useContext(AuthContext);\r\n  const onSubmit = (values) => {\r\n    let data = new FormData();\r\n    data.append(\"file\", values.photo);\r\n    for (let [key, value] of Object.entries(values)) {\r\n      if (key !== \"photo\") data.append(key, value);\r\n    }\r\n    SignUp(data);\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      addr: \"\",\r\n      contact_no: \"\",\r\n      state: \"\",\r\n      city: \"\",\r\n      pincode: \"\",\r\n      photo: \"\",\r\n    },\r\n    onSubmit,\r\n    validate: (values) => {\r\n      let errors = {};\r\n      if (!values.name) {\r\n        errors.name = \"* Name Required\";\r\n      }\r\n      if (!values.password) {\r\n        errors.password = \"* Password Required\";\r\n      }\r\n      if (!values.email) {\r\n        errors.email = \"* Email Required\";\r\n      }\r\n      if (!values.addr) {\r\n        errors.addr = \"* Address Required\";\r\n      }\r\n      if (!values.city) {\r\n        errors.city = \"* City Required\";\r\n      }\r\n      if (!values.state) {\r\n        errors.state = \"* State Required\";\r\n      }\r\n      if (!values.pincode) {\r\n        errors.pincode = \"* Pincode Required\";\r\n      }\r\n      if (!values.contact_no) {\r\n        errors.contact_no = \"* Phone Required\";\r\n      }\r\n      if (!values.photo) {\r\n        errors.photo = \"* Profile Photo Required\";\r\n      }\r\n      return errors;\r\n    },\r\n  });\r\n  let err_jsx;\r\n  if (state.error.length > 0) {\r\n    err_jsx = state.error.map((er) => {\r\n      return (\r\n        <h4 style={{ color: \"red\" }} key=\"sd\">\r\n          {er.message}\r\n        </h4>\r\n      );\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n      <section className=\"banner-bottom py-5\">\r\n        <div className=\"container\">\r\n          <div className=\"content-grid\">\r\n            <div className=\"content-bottom\">\r\n              <form onSubmit={formik.handleSubmit} method=\"post\">\r\n                <div className=\"field-group\">\r\n                  <div className=\"content-input-field\">\r\n                    <input\r\n                      onBlur={formik.handleBlur}\r\n                      onChange={formik.handleChange}\r\n                      name=\"name\"\r\n                      id=\"text1\"\r\n                      type=\"text\"\r\n                      value={formik.values.name}\r\n                      placeholder={\r\n                        !(formik.touched.name && formik.errors.name)\r\n                          ? \"Name\"\r\n                          : formik.errors.name\r\n                      }\r\n                      className={\r\n                        formik.touched.name && formik.errors.name\r\n                          ? \"error\"\r\n                          : null\r\n                      }\r\n                      required=\"\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"field-group\">\r\n                  <div className=\"content-input-field\">\r\n                    <input\r\n                      onBlur={formik.handleBlur}\r\n                      onChange={formik.handleChange}\r\n                      name=\"email\"\r\n                      id=\"text2\"\r\n                      type=\"email\"\r\n                      value={formik.values.email}\r\n                      placeholder={\r\n                        !(formik.touched.email && formik.errors.email)\r\n                          ? \"Email\"\r\n                          : formik.errors.email\r\n                      }\r\n                      className={\r\n                        formik.touched.email && formik.errors.email\r\n                          ? \"error\"\r\n                          : null\r\n                      }\r\n                      required=\"\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"field-group\">\r\n                  <div className=\"content-input-field\">\r\n                    <input\r\n                      onBlur={formik.handleBlur}\r\n                      onChange={formik.handleChange}\r\n                      name=\"contact_no\"\r\n                      id=\"text3\"\r\n                      type=\"text\"\r\n                      value={formik.values.contact_no}\r\n                      placeholder={\r\n                        !(formik.touched.contact_no && formik.errors.contact_no)\r\n                          ? \"Phone No.\"\r\n                          : formik.errors.contact_no\r\n                      }\r\n                      className={\r\n                        formik.touched.contact_no && formik.errors.contact_no\r\n                          ? \"error\"\r\n                          : null\r\n                      }\r\n                      required=\"\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"field-group\">\r\n                  <div className=\"content-input-field\">\r\n                    <input\r\n                      onBlur={formik.handleBlur}\r\n                      onChange={formik.handleChange}\r\n                      name=\"addr\"\r\n                      id=\"text4\"\r\n                      type=\"text\"\r\n                      value={formik.values.addr}\r\n                      placeholder={\r\n                        !(formik.touched.addr && formik.errors.addr)\r\n                          ? \"Full Address\"\r\n                          : formik.errors.addr\r\n                      }\r\n                      className={\r\n                        formik.touched.addr && formik.errors.addr\r\n                          ? \"error\"\r\n                          : null\r\n                      }\r\n                      required=\"\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"field-group\">\r\n                  <div className=\"content-input-field\">\r\n                    <input\r\n                      onBlur={formik.handleBlur}\r\n                      onChange={formik.handleChange}\r\n                      name=\"pincode\"\r\n                      id=\"text5\"\r\n                      type=\"text\"\r\n                      value={formik.values.pincode}\r\n                      placeholder={\r\n                        !(formik.touched.pincode && formik.errors.pincode)\r\n                          ? \"Pincode\"\r\n                          : formik.errors.pincode\r\n                      }\r\n                      className={\r\n                        formik.touched.pincode && formik.errors.pincode\r\n                          ? \"error\"\r\n                          : null\r\n                      }\r\n                      required=\"\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"field-group\">\r\n                  <div className=\"content-input-field\">\r\n                    <input\r\n                      onBlur={formik.handleBlur}\r\n                      onChange={formik.handleChange}\r\n                      name=\"state\"\r\n                      id=\"text6\"\r\n                      type=\"text\"\r\n                      value={formik.values.state}\r\n                      placeholder={\r\n                        !(formik.touched.state && formik.errors.state)\r\n                          ? \"State\"\r\n                          : formik.errors.state\r\n                      }\r\n                      className={\r\n                        formik.touched.state && formik.errors.state\r\n                          ? \"error\"\r\n                          : null\r\n                      }\r\n                      required=\"\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"field-group\">\r\n                  <div className=\"content-input-field\">\r\n                    <input\r\n                      onBlur={formik.handleBlur}\r\n                      onChange={formik.handleChange}\r\n                      name=\"city\"\r\n                      id=\"text7\"\r\n                      type=\"text\"\r\n                      value={formik.values.city}\r\n                      placeholder={\r\n                        !(formik.touched.city && formik.errors.city)\r\n                          ? \"City\"\r\n                          : formik.errors.city\r\n                      }\r\n                      className={\r\n                        formik.touched.city && formik.errors.city\r\n                          ? \"error\"\r\n                          : null\r\n                      }\r\n                      required=\"\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"field-group\">\r\n                  <div className=\"content-input-field\">\r\n                    <input\r\n                      onBlur={formik.handleBlur}\r\n                      onChange={formik.handleChange}\r\n                      name=\"password\"\r\n                      id=\"myInput\"\r\n                      value={formik.values.password}\r\n                      type=\"Password\"\r\n                      placeholder={\r\n                        !(formik.touched.password && formik.errors.password)\r\n                          ? \"Password\"\r\n                          : formik.errors.password\r\n                      }\r\n                      className={\r\n                        formik.touched.password && formik.errors.password\r\n                          ? \"error\"\r\n                          : null\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div class=\"custom-file\">\r\n                  <input\r\n                    type=\"file\"\r\n                    class=\"custom-file-input\"\r\n                    id=\"customFile\"\r\n                    onChange={(event) => {\r\n                      formik.setFieldValue(\r\n                        \"photo\",\r\n                        event.currentTarget.files[0]\r\n                      );\r\n                    }}\r\n                  />\r\n                  <label class=\"custom-file-label\" for=\"customFile\">\r\n                    {formik.values.photo.name}\r\n                  </label>\r\n                </div>\r\n                {formik.errors.photo ? (\r\n                  <div>\r\n                    <p style={{ color: \"red\" }}> Please Choose Photo</p>\r\n                  </div>\r\n                ) : null}\r\n                <div>{err_jsx}</div>\r\n                {!state.loading ? (\r\n                  <div className=\"content-input-field\">\r\n                    <button type=\"submit\" className=\"btn\">\r\n                      Sign Up\r\n                    </button>\r\n                  </div>\r\n                ) : (\r\n                  <SpinnerCircular color=\"grey\" secondaryColor=\"red\" />\r\n                )}\r\n                <div className=\"list-login-bottom text-center mt-lg-5 mt-4\">\r\n                  <a href=\"#\" className=\"\">\r\n                    By clicking Signup, I agree to your terms\r\n                  </a>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\ANKUR\\Desktop\\MiniProject\\miniProject\\client\\src\\util\\setHeader.js",[],"C:\\Users\\ANKUR\\Desktop\\MiniProject\\miniProject\\client\\src\\ResLog\\LoginForm.jsx",["55","56"],"C:\\Users\\ANKUR\\Desktop\\MiniProject\\miniProject\\client\\src\\products\\prodgrid.js",[],"C:\\Users\\ANKUR\\Desktop\\MiniProject\\miniProject\\client\\src\\App.js",["57","58","59"],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":59,"column":19,"nodeType":"66","endLine":59,"endColumn":31},{"ruleId":"67","severity":1,"message":"68","line":5,"column":8,"nodeType":"69","messageId":"70","endLine":5,"endColumn":14},{"ruleId":"71","severity":1,"message":"72","line":23,"column":15,"nodeType":"66","endLine":23,"endColumn":78},{"ruleId":"64","severity":1,"message":"65","line":163,"column":19,"nodeType":"66","endLine":163,"endColumn":31},{"ruleId":"64","severity":1,"message":"65","line":199,"column":19,"nodeType":"66","endLine":199,"endColumn":31},{"ruleId":"64","severity":1,"message":"65","line":213,"column":19,"nodeType":"66","endLine":213,"endColumn":31},{"ruleId":"64","severity":1,"message":"65","line":218,"column":19,"nodeType":"66","endLine":218,"endColumn":31},{"ruleId":"64","severity":1,"message":"65","line":223,"column":19,"nodeType":"66","endLine":223,"endColumn":31},{"ruleId":"64","severity":1,"message":"65","line":296,"column":19,"nodeType":"66","endLine":296,"endColumn":44},{"ruleId":"64","severity":1,"message":"65","line":115,"column":21,"nodeType":"66","endLine":115,"endColumn":52},{"ruleId":"64","severity":1,"message":"65","line":128,"column":21,"nodeType":"66","endLine":128,"endColumn":52},{"ruleId":"67","severity":1,"message":"73","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":12},{"ruleId":"67","severity":1,"message":"74","line":13,"column":11,"nodeType":"69","messageId":"70","endLine":13,"endColumn":16},{"ruleId":"75","severity":1,"message":"76","line":16,"column":6,"nodeType":"77","endLine":16,"endColumn":8,"suggestions":"78"},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'header' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'logo' is defined but never used.","'state' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array.","ArrayExpression",["81"],"no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},"Update the dependencies array to be: [loadUser]",{"range":"84","text":"85"},[535,537],"[loadUser]"]