[{"D:\\DBMS miniProject\\miniProject\\miniProject\\client\\src\\products\\AdminReview.js":"1","D:\\DBMS miniProject\\miniProject\\miniProject\\client\\src\\products\\ProdDiscription.js":"2"},{"size":10639,"mtime":1615287847624,"results":"3","hashOfConfig":"4"},{"size":11302,"mtime":1615352013482,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"qi20cb",{"filePath":"8","messages":"9","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"D:\\DBMS miniProject\\miniProject\\miniProject\\client\\src\\products\\AdminReview.js",["11","12","13","14","15","16","17","18"],"D:\\DBMS miniProject\\miniProject\\miniProject\\client\\src\\products\\ProdDiscription.js",["19","20","21","22"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { ProdCtx } from \"../context/product\";\r\nimport Axios from \"axios\";\r\nimport \"../assets/css/bootstrap.css\";\r\nimport \"../assets/css/font-awesome.css\";\r\nimport \"../assets/css/style.css\";\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { SpinnerCircular, SpinnerCircularFixed } from \"spinners-react\";\r\n\r\nexport default function ProdDiscription(props) {\r\n  console.log(props);\r\n  const [loading, setloading] = useState(false);\r\n  const { state, LogOut } = useContext(AuthContext);\r\n  const [contacted, setcontacted] = useState(false);\r\n  const [deals, setdeals] = useState();\r\n  console.log(1123232);\r\n\r\n  const { products, setproducts } = useContext(ProdCtx);\r\n  const call = async () => {\r\n    if (products.length === 0) {\r\n      let response = await Axios.get(\"/getproducts\");\r\n\r\n      setproducts(response.data.result);\r\n    }\r\n  };\r\n  const calltwo = async () => {\r\n    let response = await Axios.post(\"/getalreadydeal\", {\r\n      prod_id: product[0].prod_id,\r\n    });\r\n\r\n    if (response.data.result.length > 0) {\r\n      setcontacted(true);\r\n    }\r\n  };\r\n  const callthree = async () => {\r\n    let response = await Axios.get(\"/getDeal\");\r\n    console.log(1111111111);\r\n    console.log(response);\r\n\r\n    if (response.data.result.length > 0) {\r\n      setdeals(\r\n        response.data.result.filter(\r\n          (prod) => prod.prod_id === product[0].prod_id\r\n        )\r\n      );\r\n    } else {\r\n      setdeals(response);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    call();\r\n    calltwo();\r\n    callthree();\r\n  }, []);\r\n  const [cl, setcl] = useState(false);\r\n  console.log(cl);\r\n  console.log(\"lalala\");\r\n  console.log(products);\r\n  console.log(\"dadadad\");\r\n  const product = products.filter(\r\n    (prod) => prod.prod_id === props.match.params.id\r\n  );\r\n  console.log(product);\r\n\r\n  const table1 = (deals) => {\r\n    const onClk = async (approved, email, id, prod_id, prod_title) => {\r\n      console.log(approved);\r\n\r\n      try {\r\n        setloading(true);\r\n        await Axios.post(\"/newapprovedeals\", {\r\n          approved: approved,\r\n          email: email,\r\n          buyer_id: id,\r\n          prod_id: prod_id,\r\n          prod_title: prod_title,\r\n        });\r\n        // await Axios.post(\"/approvedeals\", {\r\n        //   approved: approved,\r\n        //   email: email,\r\n        //   buyer_id: id,\r\n        //   prod_id: prod_id,\r\n        //   prod_title: prod_title,\r\n        // });\r\n\r\n        callthree();\r\n        setloading(false);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n    return deals.map((deal, id) => {\r\n      return (\r\n        <tr>\r\n          <th scope=\"row\">{id + 1}</th>\r\n          <td>{deal.name}</td>\r\n          <td>{deal.email}</td>\r\n          <td>{deal.contact_no}</td>\r\n\r\n          <td>\r\n            <i\r\n              class=\"fa fa-check fa-2x\"\r\n              aria-hidden=\"true\"\r\n              onClick={() =>\r\n                onClk(\r\n                  true,\r\n                  deal.email,\r\n                  deal.buyer_id,\r\n                  deal.prod_id,\r\n                  deal.prod_title\r\n                )\r\n              }\r\n            ></i>\r\n          </td>\r\n          <td>\r\n            <i\r\n              class=\"fa fa-times fa-2x\"\r\n              aria-hidden=\"true\"\r\n              onClick={() =>\r\n                onClk(\r\n                  true,\r\n                  deal.email,\r\n                  deal.buyer_id,\r\n                  deal.prod_id,\r\n                  deal.prod_title\r\n                )\r\n              }\r\n            ></i>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  const pendinganddeclined = (p) => {\r\n    console.log(\"jdads\");\r\n    if (p.status === \"approved\") {\r\n      return (\r\n        <div>\r\n          {\" \"}\r\n          {state.user != null && state.user.user_id === product[0].seller_id ? (\r\n            <div>\r\n              <button\r\n                type=\"submit\"\r\n                style={{\r\n                  backgroundColor: \"Green\",\r\n                  border: \"none\",\r\n                  color: \"white\",\r\n                  padding: \"15px 32px\",\r\n                  textAlign: \"center\",\r\n                  textDecoration: \"none\",\r\n                  display: \"inline-block\",\r\n                  fontSize: \"16px\",\r\n                }}\r\n                class=\"btn\"\r\n              >\r\n                You added this product\r\n              </button>\r\n              <br />\r\n              <br />\r\n\r\n              {deals ? (\r\n                deals.length > 0 ? (\r\n                  <>\r\n                    <p>We really Thank you for adding this product!</p>\r\n                    <h3 style={{ marginTop: \"100px\" }}>\r\n                      You can Approve Your Buyers Below\r\n                    </h3>\r\n                    <table\r\n                      style={{\r\n                        marginLeft: \"300px\",\r\n                        marginBottom: \"50px\",\r\n                        float: \"left\",\r\n                        marginRight: \"200px\",\r\n                        width: \"800px\",\r\n                        alignContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        alignSelf: \"center\",\r\n                      }}\r\n                      class=\"table table-striped\"\r\n                    >\r\n                      <thead>\r\n                        <tr>\r\n                          <th scope=\"col\">No</th>\r\n                          <th scope=\"col\">Name</th>\r\n                          <th scope=\"col\">Email-id</th>\r\n                          <th scope=\"col\">Contact No</th>\r\n                          <th scope=\"col\">Approve</th>\r\n                          <th scope=\"col\">Decline</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>{table1(deals)}</tbody>\r\n                    </table>\r\n                    {/* {loading ? (\r\n                <div>\r\n                  <SpinnerCircularFixed />\r\n                </div>\r\n              ) : (\r\n                <></>\r\n              )} */}\r\n                  </>\r\n                ) : (\r\n                  <div>\r\n                    <h3>No New Buyers Till now</h3>\r\n                  </div>\r\n                )\r\n              ) : (\r\n                <div>No New Buyers Till now</div>\r\n              )}\r\n            </div>\r\n          ) : contacted ? (\r\n            <div>\r\n              <button\r\n                type=\"submit\"\r\n                style={{\r\n                  backgroundColor: \"Green\",\r\n                  border: \"none\",\r\n                  color: \"white\",\r\n                  padding: \"15px 32px\",\r\n                  textAlign: \"center\",\r\n                  textDecoration: \"none\",\r\n                  display: \"inline-block\",\r\n                  fontSize: \"16px\",\r\n                }}\r\n                class=\"btn\"\r\n              >\r\n                Contacted!!\r\n              </button>\r\n              <p>\r\n                You have already contacted the seller,wait for the reply from\r\n                him\r\n              </p>\r\n            </div>\r\n          ) : cl ? (\r\n            <div>\r\n              <button\r\n                type=\"submit\"\r\n                style={{\r\n                  backgroundColor: \"Green\",\r\n                  border: \"none\",\r\n                  color: \"white\",\r\n                  padding: \"15px 32px\",\r\n                  textAlign: \"center\",\r\n                  textDecoration: \"none\",\r\n                  display: \"inline-block\",\r\n                  fontSize: \"16px\",\r\n                }}\r\n                class=\"btn\"\r\n              >\r\n                Contacted!!\r\n              </button>\r\n              <p>\r\n                You have already contacted the seller,wait for the reply from\r\n                him\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            <button\r\n              type=\"submit\"\r\n              onClick={async (e) => {\r\n                e.preventDefault();\r\n                setcl(true);\r\n                if (state.user != null) {\r\n                  await Axios.post(\"/usr/makeDeal\", {\r\n                    prod_id: product[0].prod_id,\r\n                  });\r\n                } else {\r\n                  alert(\"Login First To Contact Seller\");\r\n                  window.location.replace(\"/collection\");\r\n                }\r\n              }}\r\n              style={{\r\n                backgroundColor: \"#f44336\",\r\n                border: \"none\",\r\n                color: \"white\",\r\n                padding: \"15px 32px\",\r\n                textAlign: \"center\",\r\n                textDecoration: \"none\",\r\n                display: \"inline-block\",\r\n                fontSize: \"16px\",\r\n              }}\r\n              class=\"btn\"\r\n            >\r\n              Contact Seller\r\n            </button>\r\n          )}\r\n        </div>\r\n      );\r\n    } else if (p.status === \"pending\") {\r\n      return (\r\n        <div>\r\n          <button\r\n            type=\"submit\"\r\n            style={{\r\n              backgroundColor: \"#FFA500\",\r\n              border: \"none\",\r\n              color: \"white\",\r\n              padding: \"15px 32px\",\r\n              textAlign: \"center\",\r\n              textDecoration: \"none\",\r\n              display: \"inline-block\",\r\n              fontSize: \"16px\",\r\n            }}\r\n            class=\"btn\"\r\n          >\r\n            Pending\r\n          </button>\r\n          <p style={{ fontSize: \"24px\" }}>\r\n            Your Product is under pending,\r\n            <br />\r\n            wait for admin approval\r\n          </p>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <button\r\n            type=\"submit\"\r\n            style={{\r\n              backgroundColor: \"#f44336\",\r\n              border: \"none\",\r\n              color: \"white\",\r\n              padding: \"15px 32px\",\r\n              textAlign: \"center\",\r\n              textDecoration: \"none\",\r\n              display: \"inline-block\",\r\n              fontSize: \"16px\",\r\n            }}\r\n            class=\"btn\"\r\n          >\r\n            Declined\r\n          </button>\r\n          <br />\r\n          <p style={{ fontSize: \"24px\" }}>Your Product has been declined</p>\r\n          {p.reason ? (\r\n            <div>\r\n              <p style={{ fontSize: \"24px\" }}>And here is the reason:</p>\r\n              <u>\r\n                <p style={{ fontSize: \"20px\" }}>{p.reason}</p>\r\n              </u>\r\n            </div>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  if (!loading) {\r\n    return (\r\n      <div>\r\n        <br />\r\n\r\n        <h1 style={{ marginTop: \"20px\" }}>{product[0].prod_title}</h1>\r\n        <img\r\n          src={product[0].prod_img}\r\n          style={{\r\n            height: \"600px\",\r\n            width: \"600px\",\r\n            float: \"left\",\r\n            marginTop: \"50px\",\r\n            marginLeft: \"200px\",\r\n            marginBottom: \"200px\",\r\n          }}\r\n        />\r\n        <h2 style={{ marginTop: \"200px\" }}>Product Discription</h2>\r\n        <br />\r\n        <h3>{product[0].prod_desc}</h3>\r\n\r\n        <br />\r\n        <h2 style={{ marginTop: \"50px\" }}>Product Price</h2>\r\n        <br />\r\n        <h3>Rs &nbsp;{product[0].prod_price}</h3>\r\n        <br />\r\n\r\n        {pendinganddeclined(product[0])}\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div style={{ marginTop: \"300px\" }}>\r\n        <SpinnerCircular size=\"5%\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n",{"ruleId":"23","severity":1,"message":"24","line":8,"column":27,"nodeType":"25","messageId":"26","endLine":8,"endColumn":47},{"ruleId":"23","severity":1,"message":"27","line":13,"column":18,"nodeType":"25","messageId":"26","endLine":13,"endColumn":24},{"ruleId":"23","severity":1,"message":"28","line":15,"column":10,"nodeType":"25","messageId":"26","endLine":15,"endColumn":19},{"ruleId":"23","severity":1,"message":"29","line":16,"column":10,"nodeType":"25","messageId":"26","endLine":16,"endColumn":15},{"ruleId":"30","severity":1,"message":"31","line":60,"column":6,"nodeType":"32","endLine":60,"endColumn":8,"suggestions":"33"},{"ruleId":"23","severity":1,"message":"34","line":61,"column":14,"nodeType":"25","messageId":"26","endLine":61,"endColumn":19},{"ruleId":"23","severity":1,"message":"35","line":71,"column":9,"nodeType":"25","messageId":"26","endLine":71,"endColumn":15},{"ruleId":"36","severity":1,"message":"37","line":162,"column":9,"nodeType":"38","endLine":172,"endColumn":11},{"ruleId":"23","severity":1,"message":"24","line":8,"column":27,"nodeType":"25","messageId":"26","endLine":8,"endColumn":47},{"ruleId":"23","severity":1,"message":"27","line":13,"column":18,"nodeType":"25","messageId":"26","endLine":13,"endColumn":24},{"ruleId":"30","severity":1,"message":"31","line":55,"column":6,"nodeType":"32","endLine":55,"endColumn":8,"suggestions":"39"},{"ruleId":"36","severity":1,"message":"37","line":359,"column":9,"nodeType":"38","endLine":369,"endColumn":11},"no-unused-vars","'SpinnerCircularFixed' is defined but never used.","Identifier","unusedVar","'LogOut' is assigned a value but never used.","'contacted' is assigned a value but never used.","'deals' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'call', 'callthree', and 'calltwo'. Either include them or remove the dependency array.","ArrayExpression",["40"],"'setcl' is assigned a value but never used.","'table1' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["41"],{"desc":"42","fix":"43"},{"desc":"42","fix":"44"},"Update the dependencies array to be: [call, callthree, calltwo]",{"range":"45","text":"46"},{"range":"47","text":"46"},[1662,1664],"[call, callthree, calltwo]",[1584,1586]]